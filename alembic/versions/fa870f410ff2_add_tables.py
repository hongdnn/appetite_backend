"""add tables

Revision ID: fa870f410ff2
Revises: f8f088907b62
Create Date: 2025-03-31 23:31:52.904317

"""
from typing import Sequence, Union
import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fa870f410ff2'
down_revision: Union[str, None] = 'f8f088907b62'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('foods',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('instruction', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('category', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_foods_name'), 'foods', ['name'], unique=False)
    op.create_table('ingredients',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ingredients_name'), 'ingredients', ['name'], unique=False)
    op.create_table('food_ingredients',
    sa.Column('food_id', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('ingredient_id', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.ForeignKeyConstraint(['food_id'], ['foods.id'], ),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ),
    sa.PrimaryKeyConstraint('food_id', 'ingredient_id')
    )
    op.create_table('saved_foods',
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(length=36), nullable=False),
    sa.Column('food_id', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=False),
    sa.Column('is_saved', sa.Boolean(), nullable=False),
    sa.Column('updated_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['food_id'], ['foods.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'food_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('saved_foods')
    op.drop_table('food_ingredients')
    op.drop_index(op.f('ix_ingredients_name'), table_name='ingredients')
    op.drop_table('ingredients')
    op.drop_index(op.f('ix_foods_name'), table_name='foods')
    op.drop_table('foods')
    # ### end Alembic commands ###
